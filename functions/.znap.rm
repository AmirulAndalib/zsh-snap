#!/bin/zsh
# delete repos
# args: ( <repo> | <cache name> ) ...
zmodload -Fa zsh/files b:zf_rm
zmodload -Fa zsh/parameter p:commands

.znap.rm() {
  emulate -L zsh; setopt $_znap_opts

  if (( $# < 1 )); then
    print -u2 'znap rm: not enough arguments'
    .znap.help rm
    return $(( sysexits[(i)USAGE] + 63 ))
  fi
  if (( ${(M@)#@:#.##} > 0 )); then
    print -u2 "znap rm: not a valid argument: ${(M)@:#.##}"
    .znap.help rm
    return $(( sysexits[(i)USAGE] + 63 ))
  fi

  local -aU files=( ~znap/$^@(N) )
  (( $#files > 0 )) && 
      {
        local pwd=$PWD
        cd -q -- ~znap

        if [[ -v commands[osascript] ]]; then
          print Moving $(eval ls -d $files[@]:t) to Trash.
          local items=( '(POSIX file "'${^files:a}'")' )
          osascript -e \
              'tell application "Finder" to delete every item of {'${(j:, :)items}'}' >/dev/null
        else
          print Removing $(eval ls -d $files[@]:t)
          zf_rm -frs $files[@]
        fi
      } always {
        [[ -x $pwd ]] &&
            cd -q -- $pwd
      }

  local -aU repos=()
  local f receipts=$XDG_CONFIG_HOME/zsh/znap-repos
  for f in $@; do
    repos=( "${(M@)${(f)"$(<$receipts)"}:#**/${f}(|.git(|/))}" )
    if (( $#repos > 0 )); then
      print -nPr -- "Remove %B$repos%b from $receipts?"
      read -q "? [yn] " &&
        print -l "${(@)${(f)"$(<$receipts)"}:#**/${f}(|.git(|/))}" >| $receipts
      print -l
    fi
  done
}

.znap.rm "$@"
