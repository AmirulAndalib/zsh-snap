#!/bin/zsh

# Resolve ~[$1]
..znap.dirname.n() {
  emulate -L zsh; setopt extendedglob
  private -a dirs=()

  local gitdir=''
  ..znap.repos-dir

  case $1 in
    ( ${1:t} )
      dirs=( $gitdir/{*/,}$1/.git(Non-/:h) )
    ;;
    ( ${1:t2} )
      dirs=( $gitdir/$1/.git(Non-/:h) )
    ;;
  esac

  (( $#dirs[@] == 1 )) ||
      return

  reply=( $dirs )
}

# ~Abbreviate $1
..znap.dirname.d() {
  emulate -L zsh; setopt extendedglob

  local gitdir=''
  ..znap.repos-dir

  private name=${1:t2}

  local dir=$gitdir/$name

  [[ -d $dir/.git ]] ||
      return

  private -a same_named=( $gitdir/*/${name:t}/.git(on-/:h:t) )
  (( $#same_named[@] == 1 )) &&
      name=${1:t}

  reply=( "$name" $#dir )
}

# Complete ~[...]
..znap.dirname.c() {
set -x
  if [[ -n $ISUFFIX ]]; then
    # Workaround: In Zsh <= 5.9.0, _setup doesn't get called when completing inside a subscript.
    _setup default
  else
    local suf=-S]
  fi
set +x
  local -a expl=()
  _description named-directories expl 'named directory'

  local -a repos=()
  local gitdir=
  ..znap.repos

  builtin compadd "$expl[@]" $suf -a -- repos
}

..znap.dirname() {
  ..znap.dirname.$1 "$2"
}

..znap.dirname "$@"
