#!/bin/zsh
# cache & eval output of command
# args: ( <__znap__repo> | <name> ) <command>
zmodload -Fa zsh/files b:zf_mkdir

if (( $# < 2 )); then
  print -u2 'znap eval: not enough arguments'
  .znap.help eval
  return $(( sysexits[(i)USAGE] + 63 ))
fi
{
  local __znap__pwd=$PWD

  local __znap__repo=~znap/$1
  [[ $1 == */* ]] &&
      __znap__repo=~[$1]
  shift

  local __znap__cache_dir=$XDG_CACHE_HOME/zsh-snap/eval
  [[ -d $__znap__cache_dir ]] ||
      zf_mkdir -pm 0700 $__znap__cache_dir

  local __znap__line __znap__cache_file=$__znap__cache_dir/${__znap__repo:t}.zsh
  [[ -r $__znap__cache_file ]] &&
    IFS='' read -r __znap__line < $__znap__cache_file

  local __znap__header="#${(q)@}"
  if [[ $__znap__line != $__znap__header || (
        -d $__znap__repo && -f $__znap__repo/${GIT_DIR:-.git}/index &&
          $__znap__repo/${GIT_DIR:-.git}/index -nt $__znap__cache_file
      ) ]]; then
    print -r "$__znap__header" >! $__znap__cache_file
    [[ -d $__znap__repo ]] &&
        cd -q -- $__znap__repo
    eval "$@" >>| $__znap__cache_file
  fi

  . $__znap__cache_file
} always {
  [[ -x $__znap__pwd ]] &&
      cd -q -- $__znap__pwd
}
