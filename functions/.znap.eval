#!/bin/zsh
# run command, then cache & eval output
# args: ( <repo> | <name> ) <command>

.znap.eval() {
  if (( $# < 2 )); then
    print -u2 'znap eval: not enough arguments'
    .znap.help eval
    return 64
  fi

  local -i ret=1
  local dir=~znap/$1 pwd=$PWD
  if [[ $1 == */* ]]; then
    dir=~znap/${${1##*/}%.git}
    [[ -d $dir ]] ||
      .znap.clone $1
  fi
  {
    [[ -d $dir ]] &&
      cd -q $dir
    shift
    local cmd="$@"
    local line header="#${(q)cmd}"
    local cache=$dir.zsh
    [[ -r $cache ]] &&
      IFS='' read -r line < $cache
    if [[ $line != $header ||
        ( -d $dir && -f $dir/.git/index && $dir/.git/index -nt $cache ) ]]; then
      print -r "$header" >! $cache
      cd -q $dir
      print -r "$(eval $cmd)" >>! $cache
    fi
    . $cache; ret=$?
  } always {
    [[ -x $pwd ]] &&
      cd -q $pwd
  }
  return ret
}

.znap.eval "$@"
