#!/bin/zsh
# run command, then cache_file & eval output
# args: ( <repo> | <name> ) <command>
zmodload -Fa zsh/files b:zf_mkdir

.znap.eval() {
  if (( $# < 2 )); then
    print -u2 'znap eval: not enough arguments'
    .znap.help eval
    return 64
  fi

  local -i ret=1
  local repo=~znap/$1 pwd=$PWD
  if [[ $1 == */* ]]; then
    repo=~znap/${${1##*/}%.git}
    [[ -d $repo ]] ||
      .znap.clone $1
  fi
  {
    shift
    local cmd="$@"
    local line header="#${(q)cmd}"
    local cache_dir=$XDG_CACHE_HOME/zsh-snap/eval
    [[ -d $cache_dir ]] ||
      zf_mkdir -pm 0700 $cache_dir
    local cache_file=$cache_dir/${repo:t}.zsh
    [[ -r $cache_file ]] &&
      IFS='' read -r line < $cache_file
    if [[ $line != $header ||
        ( -d $repo && -f $repo/${GIT_DIR:-.git}/index
          && $repo/${GIT_DIR:-.git}/index -nt $cache_file ) ]]; then
      print -r "$header" >! $cache_file
      [[ -d $repo ]] &&
        cd -q $repo
      print -r "$(eval $cmd)" >>! $cache_file
    fi
    . $cache_file; ret=$?
  } always {
    [[ -x $pwd ]] &&
      cd -q $pwd
  }
  return ret
}

.znap.eval "$@"
