#!/bin/zsh
# symlink executables from repos to ~/.local/bin
# args: <repo> ...
emulate -L zsh; setopt $_znap_opts
zmodload -Fa zsh/files b:zf_ln b:zf_mkdir

if (( $# < 1 )); then
  print -u2 'znap install: not enough arguments'
  .znap.help install
  return $(( sysexits[(i)USAGE] + 63 ))
fi

local -i ret=0

.znap.clone $@ ||
    ret=$?

local -a orig link
local -a bindir=( ~/.local/bin ) datadir=( ${XDG_DATA_HOME:-~/.local/share}/zsh/site-functions )
local REPLY pat repo sub
mkdir -p $bindir $datadir
for repo in $@; do
  repo=~[$repo]
  orig=( $repo/{,bin/}*(-*) )
  while (( $#orig )); do
    link=( $bindir/$orig[1]:t )
    if [[ $link[1]:A != $orig[1] ]]; then
      hash $orig[1]:t=$link[1]
      if zf_ln -fns $orig[1] $link[1]; then
        print -Pr -- "%F{14}${(D)link[1]}%f -> %F{10}${(D)orig[1]}%f"
      else
        (( ret = sysexits[(i)CANTCREAT] + 63 ))
      fi
    fi
    shift orig
  done
  pat="$repo/**/_*~*.zwc(-.)"
  sub="$( git -C $repo submodule foreach --quiet pwd )"
  [[ -n $sub ]] &&
      pat+="~(${(j:|:)${(f)sub}})/*"
  orig=( $~pat )
  while (( $#orig )); do
    link=( $datadir/$orig[1]:t )
    if [[ $link[1]:A != $orig[1] ]]; then
      IFS='' read -r < $orig[1]
      if [[ $REPLY == \#(autoload|compdef)\ * ]]; then
        if zf_ln -fns $orig[1] $link[1]; then
          print -Pr -- "%F{14}${(D)link[1]}%f -> %F{10}${(D)orig[1]}%f"
        else
          (( ret = sysexits[(i)CANTCREAT] + 63 ))
        fi
      fi
    fi
    shift orig
  done
done
hash -f
unfunction compdef compinit 2>/dev/null
autoload -Uz compinit
[[ -f $_comp_dumpfile ]] &&
    zf_rm -f $_comp_dumpfile
compinit -C -d $_comp_dumpfile
compinit() {:}
return ret
