#!/bin/zsh
# init prompt from repo
zmodload zsh/parameter
autoload -Uz add-zsh-hook
autoload -Uz add-zle-hook-widget

.znap.prompt() {
  local basedir=$(znap path)
  local -a matches=( $basedir/{$1,*$1*}(N/) )
  local repo=$matches[1]
  typeset -gU FPATH fpath=( $repo $fpath )

  local theme=${2:-$1}
  local setup=prompt_${theme}_setup
  if ! autoload +X -Uz $setup 2>/dev/null; then
    unfunction $setup

    local file=$basedir/$setup
    [[ -r $file ]] ||
      print -r "znap source $repo:t ${2:+themes/$2.zsh-theme}" >! $file

    fpath=( $basedir $fpath )
    autoload -Uz $setup
  fi

  setopt prompt{bang,cr,percent,sp,subst}
  autoload -Uz promptinit
  promptinit
  prompt $theme

  add-zsh-hook precmd .znap.prompt.precmd
  add-zle-hook-widget line-init .znap.prompt.line-init

  local precmd=prompt_${theme}_precmd
  [[ -n $precmd_functions[(r)$precmd] ]] && $precmd

  echoti sc  # save cursor position

  [[ -o promptcr ]] && print -n $'\r'

  :
  print -nP "$PS1"

  local preexec=prompt_${theme}_preexec
  [[ -n $preexec_functions[(r)$preexec] ]] && $preexec
}

.znap.prompt.precmd() {
  add-zsh-hook -d precmd $funcstack[1]

  echoti invis  # invisible text
  echoti civis  # invisible cursor
}

.znap.prompt.line-init() {
  add-zle-hook-widget -d line-init $funcstack[1]

  echoti rc  # restore cursor position
  [[ -o promptcr ]] ||
    echoti cud1  # cursor down 1
  echoti cnorm  # normal cursor
  zle .redisplay
}

.znap.prompt "$@"
