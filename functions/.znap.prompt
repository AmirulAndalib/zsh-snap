#!/bin/zsh
# instantly init prompt theme from repo
# args: [ <repo> ] <theme>
zmodload -Fa zsh/files b:zf_mkdir
zmodload -F zsh/parameter p:functions
zmodload -F zsh/terminfo b:echoti p:terminfo
autoload -Uz add-zsh-hook

.znap.prompt.echoti() {
  [[ -v terminfo[$1] ]] &&
    echoti $@
}

.znap.prompt.setup() {
  emulate -L zsh; setopt $_znap_opts

  local setup=prompt_${theme}_setup
  [[ -v functions[$setup] ]] &&
    return
  autoload +X -Uz $setup &>/dev/null &&
    return

  unfunction $setup

  local -a file=( $repo/***/$setup(-.Y1) )
  if [[ -n $file ]]; then
    if autoload +X -Uz $file &>/dev/null; then
      fpath=( $file:h $fpath[@] )
      return
    fi
    unfunction $file
  fi

  file=( $repo/***/*$theme*.zsh-theme(-.Y1) )

  [[ -n $file ]] ||
    return

  eval "$setup() {
    source $file
  }"
}

.znap.prompt() {
  if (( $# < 1 )); then
    print -u2 'znap prompt: not enough arguments'
    .znap.help prompt
    return 64
  fi

  local repo=~znap/$1; [[ $1 == */* ]] &&
    repo=~[$1]
  local theme=${2:-${${repo##*/((oh-my-|)zsh-|)}%%(-prompt|(-zsh|)-theme|.zsh)}}
  if ! .znap.prompt.setup; then
    local -i ret=$?
    print -u2 'znap prompt: no such theme:' $@
    return ret
  fi

  .znap.prompt.echoti civis
  .znap.prompt.echoti sc
  add-zsh-hook precmd .znap.prompt.precmd

  autoload -Uz promptinit
  promptinit
  prompt_themes+=( $theme )

  {
    # Prevent `zsh-syntax-highlighting` from sending us into an infinite loop.
    typeset -gHi _znap__hook_widgets=0
    add-zle-hook-widget() {
      eval ":znap:add-zle-hook-widget:$(( ++_znap__hook_widgets ))() {
        add-zle-hook-widget $*
      }"
    }

    setopt prompt{bang,cr,percent,subst} NO_promptsp
    prompt $theme

    local precmd=prompt_${theme}_precmd
    if [[ -n $functions[$precmd] ]]; then
      $precmd
      functions[:znap:$precmd]=$functions[$precmd]
      eval "$precmd() {
        functions[$precmd]=\$functions[:znap:$precmd]
        unfunction :znap:$precmd
        $precmd \"\$@\"
      }"
    fi
  } always {
    unfunction add-zle-hook-widget
    autoload -Uz add-zle-hook-widget
  }

  [[ -o promptcr ]] &&
    print -n $'\r'
  :
  print -nPr - "$PS1"
  .znap.prompt.echoti cnorm
}

.znap.prompt.precmd() {
  local 0=${(%):-%N}
  add-zsh-hook -d precmd $0
  unfunction $0

  .znap.prompt.echoti civis
  .znap.prompt.echoti rc

  add-zle-hook-widget line-init .znap.prompt.line-init

  local -i i; for (( i = 1; i <= _znap__hook_widgets; i++ )); do
    eval :znap:add-zle-hook-widget:$i
  done
  unset _znap__hook_widgets

  return 0
}

.znap.prompt.line-init() {
  local 0=${(%):-%N}
  add-zle-hook-widget -d line-init $0
  unfunction $0

  .znap.prompt.echoti cnorm

  [[ -v prompt_opts ]] ||
    setopt promptsp

  unfunction .znap.prompt .znap.prompt.echoti .znap.prompt.setup
  autoload -Uz .znap.prompt
  return 0
}

.znap.prompt "$@"
