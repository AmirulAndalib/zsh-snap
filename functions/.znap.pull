#!/bin/zsh
# git pull repos in parallel

.znap.pull() {
  emulate -L zsh; setopt $_znap_opts

  local basedir=$(.znap.path) || return
  local -a repos=( $basedir/$^@(#q/) ); (( $#repos > 0 )) ||
    repos=( $basedir/*(/) )

  {
    local pwd=$PWD
    cd $basedir

    .znap.multi '.znap.pull.task '${(i)^repos}
    local -i ret=$?
    .znap.clean
    .znap.compile
  } always {
    [[ -x $pwd ]] &&
      cd $pwd
  }
  return ret
}

.znap.pull.task() {
  emulate -L zsh; setopt $_znap_opts
  local -i ret
  print $(
    eval 'ls -d '$1:t
    git -C $1 pull --rebase --recurse-submodules -j$(ulimit -n) 2>&1
    ret=$?
  )
  .znap.clean $1/***(N/)
  .znap.compile $1/***(N.)
  return ret
}

.znap.pull "$@"
