#!/bin/zsh
# remove executables & completion functions
# args: <repo> ...
emulate -L zsh; setopt $_znap_opts
zmodload -F zsh/parameter p:commands
autoload -Uz is-at-least

# Try if we have a safer and faster alternative to `rm`.
if [[ $VENDOR == apple ]]; then
  private rm=trash
  trash() {
    local -aU items=( $^@(N) )
    items=( '(POSIX file "'${^items[@]:a}'")' )
    osascript -e 'tell application "Finder" to delete every item of {'${(j:, :)items}'}' \
        > /dev/null
  }
elif command -v gio > /dev/null; then
  # gio is available for macOS, but gio trash does NOT work correctly there.
  private rm='gio trash'
else
  zmodload -F zsh/files b:zf_rm
  private rm='zf_rm -frs'
fi


if (( $# < 1 )); then
  print -u2 'znap uninstall: not enough arguments'
  .znap.help uninstall
  return $(( sysexits[(i)USAGE] + 63 ))
fi

private -a abs=() files=()
private -i ret=0
private dir= file repo=
for repo in $@; do
  dir=~[$repo]
  is-at-least 2.31 ${${=$( git --version )}[3]} &&
      git -C $dir maintenance unregister &> /dev/null
  print 'Removing:'
  files=( ~/.local/bin/* ${XDG_DATA_HOME:-$HOME/.local/share}/zsh/site-functions/* )
  for file in $files;do
    abs=( $file:A )
    if [[ $abs == $dir/* || $file:t == ${dir:t}(|.*) ]]; then
      print -r -- ${(D)file}
      $=rm $file
      [[ $file == ~/.local/bin/* && ! -d $abs && -v commands[$file:t] ]] &&
          unhash $file:t
    fi
  done
  $=rm $dir
  print -Pr -- "%F{4}${dir}%f"
  print -P "%F{12}${repo}%f uninstalled."
done
hash -f
[[ -f $_comp_dumpfile ]] &&
    $=rm $_comp_dumpfile
return ret
