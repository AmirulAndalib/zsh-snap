#!/bin/zsh
# git clone remotes in parallel to plugins dir
zmodload -F zsh/files b:zf_mkdir

.znap.clone() {
  emulate -L zsh; setopt $_znap_opts

  local dir=${XDG_CONFIG_HOME:-$HOME/.config}/zsh/; [[ -d $dir ]] ||
    zf_mkdir -p $dir
  local file=$dir/znap-repos
  local -aU lines=(); [[ -f $file ]] &&
    lines=( "${(f)"$(<$file)"}" )
  local -aU repos=( $@ ); (( $#repos > 0 )) ||
    repos=( $lines[@] )

  local basedir=$(.znap.path) || return

  if (( $#repos < 1 )); then
    print -u2 "znap clone: no repositories in $basedir or $file"
    return 1
  fi

  local server; zstyle -s :znap:clone: default-server server ||
    server='https://github.com/'

  local -i ret=1
  .znap.multi '.znap.clone.task '$^repos
  ret=$?

  lines=( ${lines:#(${repos[@]})} )
  lines+=( $repos[@] )
  print -l ${(i)lines} >! $file

  .znap.clean
  .znap.compile

  return ret
}

.znap.clone.task() {
  local repo=$1; [[ $repo == (/*|*:*|*.git(|/)) ]] ||
    repo=$server$repo.git
  git -C $basedir clone --recurse-submodules -j$(ulimit -n) --depth=1 --shallow-submodules $repo
}

.znap.clone "$@"
