#!/bin/zsh
# compile asynchronously
# args: [<file>...]
zmodload -F zsh/files b:zf_rm
autoload -Uz add-zsh-hook
typeset -gHa _znap_compile_queue=()
typeset -gHi _znap_compile_fd

.znap.compile() {
  _znap_compile_queue+=( ${@:-$PWD} )
  add-zsh-hook preexec .znap.compile.next
}

.znap.compile.next() {
  emulate -L zsh; setopt $_znap_opts

  .znap.close-fd $_znap_compile_fd

  if (( $#_znap_compile_queue == 0 )); then
    add-zsh-hook preexec ${(%):-%N}
    return 0
  fi

  (( KEYS_QUEUED_COUNT + PENDING > 0 )) &&
    return 0

  local src=$_znap_compile_queue[1]
  shift _znap_compile_queue
  exec {_znap_compile_fd}< <(

    [[ -w $src:h ]] ||
      return

    local bin=$src.zwc

    [[ $bin -ot $src ]] &&
      zf_rm -f $bin 2>/dev/null || return

    [[ -r $src ]] ||
      return

    local line
    IFS='' read -r line < $src
    if [[ $line != \#* ]]; then
      zf_rm -f $bin 2>/dev/null
      return
    fi

    [[ -e $bin ]] ||
      zcompile -Uz $src 2>/dev/null
  )
  zle -F $_znap_compile_fd .znap.compile.next

  return 0
}

.znap.compile "$@"
