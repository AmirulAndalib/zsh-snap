#!/bin/zsh
# source plugin or repo submodules & scripts
# args: <repo> [ ( <dir> | <file> ) ... ]

if (( $# < 1 )); then
  print -u2 'znap source: not enough arguments'
  .znap.help source
  return $(( sysexits[(i)USAGE] + 63 ))
fi

local -aU __znap__src
() {
  local -aU tmp ext=( '.plugin.zsh' '(|.*).zsh[^.]#' '.sh' )
  local file pat repo=~[$1]
  shift

  setopt localoptions extendedglob NO_nomatch NO_nullglob

  if (( $# )); then
    tmp=( $repo/$^~@ )
  else
    tmp=( $repo )
  fi
  for file in $tmp[@]; do
    if [[ -d $file ]]; then
      tmp=( $file/{*${(~j:?:)${=${file:t}//[-_]/ }:#zsh}*,init,*}${^~ext}(NY1-.) )
    elif [[ -r $file ]]; then
      tmp=( $file )
    else
      tmp=( ${file}${^~ext}(NY1-.) )
    fi

    if ! (( ${#tmp} )); then
      print -ru2 -- "znap source: file not found: $file"
      return $(( sysexits[(i)NOINPUT] + 63 ))
    fi

    __znap__src+=( $tmp[1] )
  done
} "$@" ||
    return

local __znap__file
for __znap__file in $__znap__src[@]; do
  . $__znap__file ||
      return
done
